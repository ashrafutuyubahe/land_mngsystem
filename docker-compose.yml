version: '3.8'

services:
  # PostGIS for Spatial Data
  postgis:
    image: postgis/postgis:15-3.3
    container_name: land_postgis
    environment:
      POSTGRES_DB: land_spatial_db
      POSTGRES_USER: spatial_user
      POSTGRES_PASSWORD: spatial_pass123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - '5433:5432'  # Different port to avoid conflict with local PostgreSQL
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./sql/init-postgis.sql:/docker-entrypoint-initdb.d/init-postgis.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U spatial_user -d land_spatial_db']
      interval: 30s
      timeout: 10s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=postgis
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
  
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: land_clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'
    environment:
      CLICKHOUSE_DB: land_analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 0
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:8123/ping',
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching (no password)
  redis:
    image: redis:7-alpine
    container_name: land_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

  # RabbitMQ for Event-Driven Architecture
  rabbitmq:
    image: rabbitmq:3-management
    container_name: land_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  clickhouse_data:
  redis_data:
  rabbitmq_data: